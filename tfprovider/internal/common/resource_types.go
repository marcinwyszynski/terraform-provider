package common

import (
	"context"

	"github.com/zclconf/go-cty/cty"
)

// ManagedResourceType represents a managed resource type belonging to a
// provider.
//
// This interface will grow in future versions of this module to support
// new protocol features, so no packages outside of this module should attempt
// to implement it.
type ManagedResourceType interface {
	// ValidateConfig validates a configuration for this managed resource type.
	ValidateConfig(context.Context, cty.Value) Diagnostics

	// Import imports an existing resource into Terraform state.
	Import(context.Context, ManagedResourceImportRequest) (ManagedResourceImportResponse, Diagnostics)

	// Read asks the provider to update a value for this resource that was
	// generated by a previous call to the same provider to reflect any
	// changes that may have occurred to the corresponding remote object.
	Read(context.Context, ManagedResourceReadRequest) (ManagedResourceReadResponse, Diagnostics)

	// Plan produces a plan for changing this managed resource
	// from its prior state to a proposed new state.
	Plan(context.Context, ManagedResourcePlanRequest) (ManagedResourcePlanResponse, Diagnostics)

	// Apply applies a planned change to this managed resource.
	Apply(context.Context, ManagedResourceApplyRequest) (ManagedResourceApplyResponse, Diagnostics)

	// Sealed is a do-nothing method that exists only to represent that this
	// interface may not be implemented by any type outside of this module,
	// to allow the interface to expand in future to support new provider
	// plugin protocol features.
	Sealed() Sealed
}

// DataResourceType represents a data resource type (a data source) belonging
// to a provider.
//
// This interface will grow in future versions of this module to support
// new protocol features, so no packages outside of this module should attempt
// to implement it.
type DataResourceType interface {
	// ValidateConfig validates a configuration for this data resource type.
	ValidateConfig(context.Context, cty.Value) Diagnostics

	// Read reads data from the data source.
	Read(context.Context, DataResourceReadRequest) (DataResourceReadResponse, Diagnostics)

	// Sealed is a do-nothing method that exists only to represent that this
	// interface may not be implemented by any type outside of this module,
	// to allow the interface to expand in future to support new provider
	// plugin protocol features.
	Sealed() Sealed
}

// Request/Response types for ManagedResourceType operations

type ManagedResourceReadRequest struct {
	PreviousValue cty.Value
	OpaquePrivate []byte
}

type ManagedResourceReadResponse struct {
	RefreshedValue cty.Value
	OpaquePrivate  []byte
}

// ManagedResourcePlanRequest represents a request to plan a resource change.
type ManagedResourcePlanRequest struct {
	PriorState       cty.Value
	ProposedNewState cty.Value
	Config           cty.Value
	ProviderMeta     cty.Value
	OpaquePrivate    []byte
}

// ManagedResourcePlanResponse represents the response from planning a resource change.
type ManagedResourcePlanResponse struct {
	PlannedState    cty.Value
	RequiresReplace []cty.Path
	OpaquePrivate   []byte
}

// ManagedResourceApplyRequest represents a request to apply a resource change.
type ManagedResourceApplyRequest struct {
	PriorState    cty.Value
	PlannedState  cty.Value
	Config        cty.Value
	ProviderMeta  cty.Value
	OpaquePrivate []byte
}

// ManagedResourceApplyResponse represents the response from applying a resource change.
type ManagedResourceApplyResponse struct {
	NewState      cty.Value
	OpaquePrivate []byte
}

// ManagedResourceImportRequest represents a request to import a resource.
type ManagedResourceImportRequest struct {
	ID string
}

// ImportedResource represents a single imported resource in the response.
type ImportedResource struct {
	TypeName      string
	State         cty.Value
	OpaquePrivate []byte
}

// ManagedResourceImportResponse represents the response from importing a resource.
type ManagedResourceImportResponse struct {
	ImportedResources []ImportedResource
}

// Request/Response types for DataResourceType operations

// DataResourceReadRequest represents a request to read from a data source.
type DataResourceReadRequest struct {
	Config       cty.Value
	ProviderMeta cty.Value
}

// DataResourceReadResponse represents the response from reading a data source.
type DataResourceReadResponse struct {
	State cty.Value
}
